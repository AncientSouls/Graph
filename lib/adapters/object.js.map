{"version":3,"sources":["../../src/lib/adapters/object.js"],"names":["Graph","collection","fields","link","callback","_modifier","f","undefined","document","insert","id","$loki","error","selector","modifier","results","find","query","m","r","update","length","links","fetch","l","remove","_selector","type","parseInt","options","_options","sort","s","push","skip","limit","chain","selectOptions","compoundsort","offset","documents","data","d","generateLink","map","event","on","newDocument","oldDocument"],"mappings":"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","file":"object.js","sourcesContent":["import { Graph as AncientGraph } from '../graph.js';\n\n/**\n * Class to inherit. Class with methods for control links in graph.\n * Adapted for LokiJS.\n * \n * @class\n */\nexport class Graph extends AncientGraph {\n  \n  /**\n   * Construct new graph and checks for required adaptation methods.\n   * @param {LokiJS.Collection} collection\n   * @param {Object} fields - matching of fields in the link with fields in document\n   * @param {*} object.source\n   * @param {*} object.target\n   * @throws {Error} if the adapter methods is not complete\n   */\n  constructor(collection, fields) {\n    super();\n    this.collection = collection;\n    this.fields = fields;\n  }\n  \n  /**\n   * Should insert new link into graph.\n   * Return a synchronous result. This can be useful in your application. But for writing generic code, it is recommended to only use the callback result.\n   * \n   * @param {Link} link\n   * @param {Graph~insertCallback} [callback]\n   * @return {string} [id]\n   */\n  insert(link, callback) {\n    var _modifier = {};\n    for (var f in this.fields) {\n      _modifier[this.fields[f]] = link[f]?link[f]:undefined;\n    }\n    try {\n      var document = this.collection.insert(_modifier);\n      var id = \"\"+document.$loki;\n      if (callback) {\n        callback(undefined, id)\n      }\n      return id;\n    } catch(error) {\n      callback(error);\n    }\n  }\n  \n  /**\n   * Optional callback. If present, called with an error object as the first argument and, if no error, the unique id of inserted link as the second.\n   *\n   * @callback Graph~insertCallback\n   * @param {Error} [error]\n   * @param {string} [id]\n   */\n  \n  /**\n   * Should update to new state of modifier object link by unique id or by link query object.\n   * If the database allows, it is recommended to return a synchronous result. This can be useful in your application. But for writing generic code, it is recommended to only use the callback result.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {LinkModifier} modifier\n   * @param {Graph~updateCallback} [callback]\n   * @return {number} [count]\n   */\n  update(selector, modifier, callback) {\n    var results = this.collection.find(this.query(selector));\n    var _modifier = {};\n    for (var m in modifier) {\n      if (this.fields[m]) {\n        _modifier[this.fields[m]] = modifier[m];\n      }\n    }\n    for (var r in results) {\n      for (var m in _modifier) {\n        if (typeof(_modifier[m]) == 'undefined') {\n          if (results[r][m]) {\n            delete results[r][m];\n          }\n        } else {\n          results[r][m] = _modifier[m];\n        }\n      }\n      this.collection.update(results[r]);\n    }\n    if (callback) callback(undefined, results.length);\n    return results.length;\n  }\n  \n  /**\n   * Optional callback. If present, called with an error object as the first argument and, if no error, the number of affected documents as the second.\n   *\n   * @callback Graph~updateCallback\n   * @param {Error} [error]\n   * @param {number} [count]\n   */\n  \n  /**\n   * Should remove link by unique id or by link query object.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {Graph~removeCallback} [callback]\n   */\n  remove(selector, callback) {\n    var links = this.fetch(selector);\n    for (var l in links) {\n      this.collection.remove(links[l]);\n    }\n    callback(undefined, links.length);\n  }\n  \n  /**\n   * Optional callback. If present, called with an error object as the first argument.\n   *\n   * @callback Graph~removeCallback\n   * @param {Error} [error]\n   * @param {number} [count]\n   */\n  \n  /**\n   * Generate query for links search by unique id or by link query object.\n   * \n   * @param {string|LinkSelector} selector\n   * @return {*} query\n   */\n  query(selector) {\n    var _selector = {};\n    var type = typeof(selector);\n    if (type == 'string' || type == 'number') {\n      _selector.$loki = parseInt(selector);\n    } else if (type == 'object') {\n      for (var m in selector) {\n        if (this.fields[m]) {\n          _selector[this.fields[m]] = selector[m];\n        }\n      }\n    }\n    return _selector;\n  }\n  \n  /**\n   * Generate adapted for database options object.\n   * \n   * @param {string|LinkSelector} selector\n   * @return {*} query - a query suitable for the database\n   */\n  selectOptions(options) {\n    var _options = {};\n    if (options) {\n      if (options.sort) {\n        _options.sort = [];\n        for (var s in options.sort) {\n          if (this.fields[s]) {\n            _options.sort.push([this.fields[s], options.sort[s]]);\n          }\n        }\n      }\n      if (typeof(options.skip) == 'number') {\n        _options.skip = options.skip;\n      }\n      if (typeof(options.limit) == 'number') {\n        _options.limit = options.limit;\n      }\n    }\n    return _options;\n  }\n  \n  /**\n   * Generate Link from document by fields.\n   * \n   * @param {Object} document\n   * @return {Link} link\n   */\n  generateLink(document) {\n    var link = {};\n    for (var f in this.fields) {\n      if (document[this.fields[f]]) {\n        link[f] = document[this.fields[f]];\n      }\n    }\n    return link;\n  }\n  \n  /**\n   * Find and all matching links as an Array.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {SelectOptions} [options]\n   * @param {Graph~fetchCallback} [callback]\n   * @return {Link[]} links - result links objects in array\n   */\n  fetch(selector, options, callback) {\n    var chain = this.collection.chain().find(this.query(selector));\n    var _options = this.selectOptions(options);\n    if (_options.sort) chain = chain.compoundsort(_options.sort);\n    if (_options.skip) chain = chain.offset(_options.skip);\n    if (_options.limit) chain = chain.limit(_options.limit);\n    var documents = chain.data();\n    var links = [];\n    for (var d in documents) {\n      links.push(this.generateLink(documents[d]));\n    }\n    if (callback) callback(undefined, links);\n    return links;\n  }\n  \n  /**\n   * Optional callback. If present, called with an error object as the first argument and, if no error, the result links objects in array.\n   *\n   * @callback Graph~fetchCallback\n   * @param {Error} [error]\n   * @param {Link[]} [links]\n   */\n  \n  /**\n   * Should call callback once for each matching document, sequentially and synchronously.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {SelectOptions} [options]\n   * @param {Graph~eachCallback} [callback]\n   */\n  each(selector, options, callback) {\n    var links = this.fetch(selector, options);\n    for (var l in links) {\n      callback(links[l]);\n    }\n  }\n  \n  /**\n   * @callback Graph~eachCallback\n   * @param {Link} [link]\n   */\n  \n  /**\n   * Should map callback over all matching documents. Returns an Array.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {SelectOptions} [options]\n   * @param {Graph~mapCallback} [callback]\n   * @return {Array} results\n   */\n  map(selector, options, callback) {\n    var links = this.fetch(selector, options);\n    return links.map(callback);\n  }\n  \n  /**\n   * @callback Graph~mapCallback\n   * @param {Link} [link]\n   * @return {*} result\n   */\n  \n  /**\n   * Should subscribe to the events: link, unlink, insert, update, remove.\n   * \n   * @param {string} event - name\n   * @param {Graph-onCallback} callback\n   */\n  on(event, callback) {\n    if (event == 'insert') {\n      this.collection.on('insert', (document) => {\n        callback(undefined, this.generateLink(document));\n      });\n    }\n    if (event == 'update') {\n      this.collection.on('update', (newDocument, oldDocument) => {\n        callback(this.generateLink(oldDocument), this.generateLink(newDocument));\n      });\n    }\n    if (event == 'remove') {\n      this.collection.on('remove', (document) => {\n        callback(this.generateLink(document), undefined);\n      });\n    }\n    if (event == 'link') {\n      this.collection.on('insert', (document) => {\n        callback(undefined, this.generateLink(document));\n      });\n      this.collection.on('update', (newDocument, oldDocument) => {\n        callback(this.generateLink(oldDocument), this.generateLink(newDocument));\n      });\n    }\n    if (event == 'unlink') {\n      this.collection.on('update', (newDocument, oldDocument) => {\n        callback(this.generateLink(oldDocument), this.generateLink(newDocument));\n      });\n      this.collection.on('remove', (document) => {\n        callback(this.generateLink(document), undefined);\n      });\n    }\n  }\n  \n  /**\n   * @callback Graph~onCallback\n   * @param {Link} [oldLink] - can be undefined on link and insert events\n   * @param {Link} [newLink] - can be undefined on unlink and remove events\n   * @param {Object} [context] - additional app information, such as context.userId\n   */\n};"]}