{"version":3,"sources":["../../src/lib/adapters/object.js"],"names":["ObjectGraph","collection","fields","emitter","index","link","_modifier","f","callback","_insertModifier","error","id","push","hasOwnProperty","_idGenerator","emit","_error","modifier","result","m","selector","results","_fetch","r","oldResult","cloneDeep","_updateModifier","undefined","length","oldLength","removed","remove","_query","query","newLength","type","doc","isArray","s","includes","options","_options","sort","keys","orders","skip","limit","document","documents","filter","orderBy","slice","links","d","_generateLink","fetch","l","map","event","addListener","newDocument","oldDocument","Graph"],"mappings":"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","file":"object.js","sourcesContent":["import { Graph as AncientGraph } from '../graph.js';\nimport lodash from 'lodash';\nimport { EventEmitter } from 'fbemitter';\n\n/**\n * Inherited class. Class with methods for control links in graph.\n * Adapted for array collection.\n * \n * @class\n * @description `import { ObjectGraph as Graph } from 'ancient-graph';`\n */\nclass ObjectGraph extends AncientGraph {\n  \n  /**\n   * Construct new graph and checks for required adaptation methods.\n   * @param {Array[]} collection\n   * @param {Object} fields - matching of fields in the link with fields in document\n   * @param {string} fields.source\n   * @param {string} fields.target\n   * @throws {Error} if the adapter methods is not complete\n   */\n  constructor(collection, fields) {\n    super();\n    this.collection = collection;\n    this.fields = fields;\n    this.emitter = new EventEmitter();\n  }\n  \n  /**\n   * Specifies the id field on insert\n   * \n   * @param {number} index\n   * @param {Link} link\n   * @return {string} id;\n   */\n  _idGenerator(index, link) {\n    return \"\"+index;\n  };\n  \n  /**\n   * Generate insert modifier.\n   * \n   * @param {number} index\n   * @param {Link} link\n   * @return {string} id;\n   */\n  _insertModifier(link) {\n    var _modifier = {};\n    for (var f in link) {\n      if (this.fields[f]) {\n        _modifier[this.fields[f]] = link[f];\n      }\n    }\n    return _modifier;\n  };\n  \n  /**\n   * Should insert new link into graph.\n   * Return a synchronous result. This can be useful in your application. But for writing generic code, it is recommended to only use the callback result.\n   * \n   * @param {Link} link\n   * @param {Graph~insertCallback} [callback]\n   * @return {string} [id]\n   */\n  insert(link, callback) {\n    this.callback\n    var _modifier = this._insertModifier(link);\n    var index, error, id;\n    try {\n      index = this.collection.push(_modifier) - 1;\n      if (!this.collection[index].hasOwnProperty(this.fields['id'])) {\n        id = this.collection[index][this.fields['id']] = this._idGenerator(index, this.collection[index]);\n      }\n      this.emitter.emit('insert', this.collection[index]);\n    } catch(_error) {\n      error = _error;\n    }\n    if (callback) {\n      callback(error, id)\n    }\n    return id;\n  }\n  \n  /**\n   * Optional callback. If present, called with an error object as the first argument and, if no error, the unique id of inserted link as the second.\n   *\n   * @callback Graph~insertCallback\n   * @param {Error} [error]\n   * @param {string} [id]\n   */\n  \n  /**\n   * Generate update modifier.\n   * \n   * @param {number} index\n   * @param {Link} link\n   * @return {string} id;\n   */\n  _updateModifier(modifier, result) {\n    for (var m in modifier) {\n      if (this.fields[m]) {\n        if (typeof(modifier[m]) == 'undefined') {\n          delete result[this.fields[m]];\n        } else {\n          result[this.fields[m]] = modifier[m];\n        }\n      }\n    }\n  };\n  \n  /**\n   * Should update to new state of modifier object link by unique id or by link query object.\n   * If the database allows, it is recommended to return a synchronous result. This can be useful in your application. But for writing generic code, it is recommended to only use the callback result.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {LinkModifier} modifier\n   * @param {Graph~updateCallback} [callback]\n   * @return {number} [count]\n   */\n  update(selector, modifier, callback) {\n    var results = this._fetch(selector);\n    for (var r in results) {\n      var oldResult = lodash.cloneDeep(results[r]);\n      this._updateModifier(modifier, results[r]);\n      this.emitter.emit('update', results[r], oldResult);\n    }\n    if (callback) callback(undefined, results.length);\n    return results.length;\n  }\n  \n  /**\n   * Optional callback. If present, called with an error object as the first argument and, if no error, the number of affected documents as the second.\n   *\n   * @callback Graph~updateCallback\n   * @param {Error} [error]\n   * @param {number} [count]\n   */\n  \n  /**\n   * Should remove link by unique id or by link query object.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {Graph~removeCallback} [callback]\n   */\n  remove(selector, callback) {\n    var oldLength = this.collection.length;\n    var removed = [];\n    lodash.remove(this.collection, (result) => {\n      var _query = this.query(selector)(result);\n      if (_query) removed.push(result)\n      return _query;\n    });\n    for (var r in removed) {\n      this.emitter.emit('remove', removed[r]);\n    }\n    var newLength = this.collection.length;\n    if (callback) callback(undefined, oldLength - newLength);\n  }\n  \n  /**\n   * Optional callback. If present, called with an error object as the first argument.\n   *\n   * @callback Graph~removeCallback\n   * @param {Error} [error]\n   * @param {number} [count]\n   */\n  \n  /**\n   * Generate adapter for database query for links search by unique id or by link query object.\n   * \n   * @param {string|LinkSelector} selector\n   * @return {*} query\n   */\n  query(selector) {\n    var type = typeof(selector);\n    if (type == 'string' || type == 'number') {\n      return (doc) => { return doc[this.fields['id']] == selector };\n    } else if (type == 'object') {\n      return (doc) => {\n        if (typeof(doc) != 'object') return false;\n        for (var m in selector) {\n          if (this.fields[m]) {\n            if (typeof(selector[m]) == 'undefined') {\n              if (doc.hasOwnProperty(this.fields[m])) return false;\n            } else {\n              if (lodash.isArray(doc[this.fields[m]])) {\n                if (lodash.isArray(selector[m])) {\n                  for (var s in selector[m]) {\n                    if (!lodash.includes(doc[this.fields[m]], selector[m][s])) {\n                      return false;\n                    }\n                  }\n                } else {\n                  if (!lodash.includes(doc[this.fields[m]], selector[m])) {\n                    return false;\n                  }\n                }\n              } else {\n                if (doc[this.fields[m]] != selector[m]) return false;\n              }\n            }\n          }\n        }\n        return true;\n      }\n    }\n  }\n  \n  /**\n   * Generate adapted for database options object.\n   * \n   * @param {Object} [options]\n   * @return {*} options - a options suitable for the database\n   */\n  options(options) {\n    var _options = {};\n    if (options) {\n      if (options.sort) {\n        _options.sort = { keys: [], orders: [] };\n        for (var s in options.sort) {\n          if (this.fields[s]) {\n            _options.sort.keys.push(this.fields[s]);\n            _options.sort.orders.push(options.sort[s]?'asc':'desc');\n          }\n        }\n      }\n      if (typeof(options.skip) == 'number') {\n        _options.skip = options.skip;\n      }\n      if (typeof(options.limit) == 'number') {\n        _options.limit = options.limit;\n      }\n    }\n    return _options;\n  }\n  \n  /**\n   * Generate Link from document by fields.\n   * \n   * @param {Object} document\n   * @return {Link} link\n   */\n  _generateLink(document) {\n    var link = {};\n    for (var f in this.fields) {\n      if (document.hasOwnProperty(this.fields[f])) {\n        link[f] = document[this.fields[f]];\n      }\n    }\n    return link;\n  }\n  \n  /**\n   * Fetch native database documents.\n   * \n   * @param {string|linkSelector} selector\n   * @param {SelectOptions} [options]\n   * @return {Object[]} documents - result documents\n   */\n  _fetch(selector, options) {\n    var query = this.query(selector);\n    var documents = lodash.filter(this.collection, query); \n    var _options = this.options(options);\n    if (_options.sort) documents = lodash.orderBy(documents, _options.sort.keys, _options.orders);\n    var skip = _options.skip?_options.skip:0;\n    var limit = _options.limit?skip+_options.limit:_options.limit;\n    documents = documents.slice(skip, limit);\n    return documents;\n  }\n  \n  /**\n   * Find and all matching links as an Array.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {SelectOptions} [options]\n   * @param {Graph~fetchCallback} [callback]\n   * @return {Link[]} links - result links objects in array\n   */\n  fetch(selector, options, callback) {\n    var documents = this._fetch(selector, options);\n    var links = [];\n    for (var d in documents) {\n      links.push(this._generateLink(documents[d]));\n    }\n    if (callback) callback(undefined, links);\n    return links;\n  }\n  \n  /**\n   * Optional callback. If present, called with an error object as the first argument and, if no error, the result links objects in array.\n   *\n   * @callback Graph~fetchCallback\n   * @param {Error} [error]\n   * @param {Link[]} [links]\n   */\n  \n  /**\n   * Should call callback once for each matching document, sequentially and synchronously.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {SelectOptions} [options]\n   * @param {Graph~eachCallback} [callback]\n   */\n  each(selector, options, callback) {\n    var links = this.fetch(selector, options);\n    for (var l in links) {\n      callback(links[l]);\n    }\n  }\n  \n  /**\n   * @callback Graph~eachCallback\n   * @param {Link} [link]\n   */\n  \n  /**\n   * Should map callback over all matching documents. Returns an Array.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {SelectOptions} [options]\n   * @param {Graph~mapCallback} [callback]\n   * @return {Array} results\n   */\n  map(selector, options, callback) {\n    var links = this.fetch(selector, options);\n    return links.map(callback);\n  }\n  \n  /**\n   * @callback Graph~mapCallback\n   * @param {Link} [link]\n   * @return {*} result\n   */\n  \n  /**\n   * Should subscribe to the events: link, unlink, insert, update, remove.\n   * \n   * @param {string} event - name\n   * @param {Graph~onCallback} callback\n   */\n  on(event, callback) {\n    if (event == 'insert') {\n      this.emitter.addListener('insert', (document) => {\n        callback(undefined, this._generateLink(document));\n      });\n    }\n    if (event == 'update') {\n      this.emitter.addListener('update', (newDocument, oldDocument) => {\n        callback(this._generateLink(oldDocument), this._generateLink(newDocument));\n      });\n    }\n    if (event == 'remove') {\n      this.emitter.addListener('remove', (document) => {\n        callback(this._generateLink(document), undefined);\n      });\n    }\n    if (event == 'link') {\n      this.emitter.addListener('insert', (document) => {\n        callback(undefined, this._generateLink(document));\n      });\n      this.emitter.addListener('update', (newDocument, oldDocument) => {\n        callback(this._generateLink(oldDocument), this._generateLink(newDocument));\n      });\n    }\n    if (event == 'unlink') {\n      this.emitter.addListener('update', (newDocument, oldDocument) => {\n        callback(this._generateLink(oldDocument), this._generateLink(newDocument));\n      });\n      this.emitter.addListener('remove', (document) => {\n        callback(this._generateLink(document), undefined);\n      });\n    }\n  }\n  \n  /**\n   * @callback Graph~onCallback\n   * @param {Link} [oldLink] - can be undefined on link and insert events\n   * @param {Link} [newLink] - can be undefined on unlink and remove events\n   * @param {Object} [context] - additional app information, such as context.userId\n   */\n};\n\nexport { ObjectGraph as Graph };"]}