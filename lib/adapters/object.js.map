{"version":3,"sources":["../../src/lib/adapters/object.js"],"names":["factoryObjectGraph","ParentClassGraph","ObjectGraph","collection","fields","emitter","index","link","_modifier","f","callback","context","_insertModifier","error","id","push","hasOwnProperty","_idGenerator","emit","_error","data","item","isArray","i","_updateModifierAdd","indexOf","_updateModifierPush","_updateModifierRemove","remove","value","modifier","result","m","key","selector","results","_fetch","r","oldResult","cloneDeep","_updateModifier","undefined","length","oldLength","removed","_query","query","newLength","type","doc","s","includes","options","_options","sort","keys","orders","skip","limit","document","documents","filter","orderBy","slice","links","d","_generateLink","fetch","l","map","event","addListener","newDocument","oldDocument","Graph"],"mappings":"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","file":"object.js","sourcesContent":["import { Graph as AncientGraph } from '../graph.js';\nimport lodash from 'lodash';\nimport { EventEmitter } from 'fbemitter';\n\n/**\n * This method allows you to use ObjectGraph class to its inheritance chain.\n *\n * @param {Class} ParentClassGraph\n * @return {Class} ObjectGraph\n */\nfunction factoryObjectGraph(ParentClassGraph) {\n  /**\n   * Inherited class. Class with methods for control links in graph.\n   * Adapted for array collection.\n   * \n   * @class\n   * @description `import { ObjectGraph as Graph } from 'ancient-graph';`\n   */\n  class ObjectGraph extends ParentClassGraph {\n    \n    /**\n     * Construct new graph and checks for required adaptation methods.\n     * @param {Array[]} collection\n     * @param {Object} fields - matching of fields in the link with fields in document\n     * @param {string} fields.source\n     * @param {string} fields.target\n     * @throws {Error} if the adapter methods is not complete\n     */\n    constructor(collection, fields) {\n      super();\n      this.collection = collection;\n      this.fields = fields;\n      this.emitter = new EventEmitter();\n    }\n    \n    /**\n     * Specifies the id field on insert\n     * \n     * @param {number} index\n     * @param {Link} link\n     * @return {number|string} id;\n     */\n    _idGenerator(index, link) {\n      return \"\"+index;\n    };\n    \n    /**\n     * Generate insert modifier.\n     * \n     * @param {number} index\n     * @param {Link} link\n     * @return {number|string} id;\n     */\n    _insertModifier(link) {\n      var _modifier = {};\n      for (var f in link) {\n        if (this.fields[f]) {\n          _modifier[this.fields[f]] = link[f];\n        }\n      }\n      return _modifier;\n    };\n    \n    /**\n     * Should insert new link into graph.\n     * Return a synchronous result. This can be useful in your application. But for writing generic code, it is recommended to only use the callback result.\n     * \n     * @param {Link} link\n     * @param {Graph~insertCallback} [callback]\n     * @param {Object} [context]\n     * @return {number|string} [id]\n     */\n    insert(link, callback, context) {\n      this.callback\n      var _modifier = this._insertModifier(link);\n      var index, error, id;\n      try {\n        index = this.collection.push(_modifier) - 1;\n        if (!this.collection[index].hasOwnProperty(this.fields['id'])) {\n          id = this.collection[index][this.fields['id']] = this._idGenerator(index, this.collection[index]);\n        }\n        this.emitter.emit('insert', this.collection[index]);\n      } catch(_error) {\n        error = _error;\n      }\n      if (callback) {\n        callback(error, id)\n      }\n      return id;\n    }\n    \n    /**\n     * Optional callback. If present, called with an error object as the first argument and, if no error, the unique id of inserted link as the second.\n     *\n     * @callback Graph~insertCallback\n     * @param {Error} [error]\n     * @param {number|string} [id]\n     */\n    \n    /**\n     * Push into link value some item/items.\n     * \n     * @param {Array} data\n     * @param {string|number|string[]|number[]} item\n     */\n    _updateModifierPush(data, item) {\n      data.push(item);\n    }\n    \n    /**\n     * Push into link value some item/items if not already exists.\n     * \n     * @param {Array} data\n     * @param {string|number|string[]|number[]} item\n     */\n    _updateModifierAdd(data, item) {\n      if (lodash.isArray(item)) {\n        for (var i in item) {\n          this._updateModifierAdd(data, item[i]);\n        }\n      } else {\n        var index = lodash.indexOf(data, item);\n        if (index < 0) {\n          this._updateModifierPush(data, item);\n        }\n      }\n    }\n     \n    /**\n     * Remove from link value some item/items.\n     * \n     * @param {Array} data\n     * @param {string|number|string[]|number[]} item\n     */\n    _updateModifierRemove(data, item) {\n      if (lodash.isArray(item)) {\n        for (var i in item) {\n          this._updateModifierRemove(data, item[i]);\n        }\n      } else {\n        lodash.remove(data, function(value) {\n          return value == item;\n        });\n      }\n    }\n  \n    /**\n     * Generate update modifier.\n     * \n     * @param {LinkModifier} modifier \n     * @param {Object} result\n     * @return {number|string} id;\n     */\n    _updateModifier(modifier, result) {\n      for (var m in modifier) {\n        if (this.fields[m]) {\n          if (typeof(modifier[m]) == 'undefined') {\n            delete result[this.fields[m]];\n          } else {\n            if (typeof(modifier[m]) == 'object') {\n              if (lodash.isArray(modifier[m])) {\n                result[this.fields[m]] = modifier[m];\n              } else {\n                if (!lodash.isArray(result[this.fields[m]])) {\n                  result[this.fields[m]] = result[this.fields[m]]?[result[this.fields[m]]]:[];\n                }\n                for (var key in modifier[m]) {\n                  if (key == 'add') {\n                    this._updateModifierAdd(result[this.fields[m]], modifier[m][key]);\n                  }\n                  if (key == 'push') {\n                    this._updateModifierPush(result[this.fields[m]], modifier[m][key]);\n                  }\n                  if (key == 'remove') {\n                    this._updateModifierRemove(result[this.fields[m]], modifier[m][key]);\n                  }\n                }\n              }\n            } else {\n              result[this.fields[m]] = modifier[m];\n            }\n          }\n        }\n      }\n    };\n    \n    /**\n     * Should update to new state of modifier object link by unique id or by link query object.\n     * If the database allows, it is recommended to return a synchronous result. This can be useful in your application. But for writing generic code, it is recommended to only use the callback result.\n     * \n     * @param {string|LinkSelector} selector\n     * @param {LinkModifier} modifier\n     * @param {Graph~updateCallback} [callback]\n     * @param {Object} [context]\n     * @return {number} [count]\n     */\n    update(selector, modifier, callback, context) {\n      var results = this._fetch(selector);\n      for (var r in results) {\n        var oldResult = lodash.cloneDeep(results[r]);\n        this._updateModifier(modifier, results[r]);\n        this.emitter.emit('update', results[r], oldResult);\n      }\n      if (callback) callback(undefined, results.length);\n      return results.length;\n    }\n    \n    /**\n     * Optional callback. If present, called with an error object as the first argument and, if no error, the number of affected documents as the second.\n     *\n     * @callback Graph~updateCallback\n     * @param {Error} [error]\n     * @param {number} [count]\n     */\n    \n    /**\n     * Should remove link by unique id or by link query object.\n     * \n     * @param {string|LinkSelector} selector\n     * @param {Graph~removeCallback} [callback]\n     * @param {Object} [context]\n     */\n    remove(selector, callback, context) {\n      var oldLength = this.collection.length;\n      var removed = [];\n      lodash.remove(this.collection, (result) => {\n        var _query = this.query(selector)(result);\n        if (_query) removed.push(result)\n        return _query;\n      });\n      for (var r in removed) {\n        this.emitter.emit('remove', removed[r]);\n      }\n      var newLength = this.collection.length;\n      if (callback) callback(undefined, oldLength - newLength);\n    }\n    \n    /**\n     * Optional callback. If present, called with an error object as the first argument.\n     *\n     * @callback Graph~removeCallback\n     * @param {Error} [error]\n     * @param {number} [count]\n     */\n    \n    /**\n     * Generate adapter for database query for links search by unique id or by link query object.\n     * \n     * @param {string|LinkSelector} selector\n     * @return {*} query\n     */\n    query(selector) {\n      var type = typeof(selector);\n      if (type == 'string' || type == 'number') {\n        return (doc) => { return doc[this.fields['id']] == selector };\n      } else if (type == 'object') {\n        return (doc) => {\n          if (typeof(doc) != 'object') return false;\n          for (var m in selector) {\n            if (this.fields[m]) {\n              if (typeof(selector[m]) == 'undefined') {\n                if (doc.hasOwnProperty(this.fields[m])) return false;\n              } else {\n                if (lodash.isArray(doc[this.fields[m]])) {\n                  if (lodash.isArray(selector[m])) {\n                    for (var s in selector[m]) {\n                      if (!lodash.includes(doc[this.fields[m]], selector[m][s])) {\n                        return false;\n                      }\n                    }\n                  } else {\n                    if (!lodash.includes(doc[this.fields[m]], selector[m])) {\n                      return false;\n                    }\n                  }\n                } else {\n                  if (doc[this.fields[m]] != selector[m]) return false;\n                }\n              }\n            }\n          }\n          return true;\n        }\n      }\n    }\n    \n    /**\n     * Generate adapted for database options object.\n     * \n     * @param {Object} [options]\n     * @return {*} options - a options suitable for the database\n     */\n    options(options) {\n      var _options = {};\n      if (options) {\n        if (options.sort) {\n          _options.sort = { keys: [], orders: [] };\n          for (var s in options.sort) {\n            if (this.fields[s]) {\n              _options.sort.keys.push(this.fields[s]);\n              _options.sort.orders.push(options.sort[s]?'asc':'desc');\n            }\n          }\n        }\n        if (typeof(options.skip) == 'number') {\n          _options.skip = options.skip;\n        }\n        if (typeof(options.limit) == 'number') {\n          _options.limit = options.limit;\n        }\n      }\n      return _options;\n    }\n    \n    /**\n     * Generate Link from document by fields.\n     * \n     * @param {Object} document\n     * @return {Link} link\n     */\n    _generateLink(document) {\n      var link = {};\n      for (var f in this.fields) {\n        if (document.hasOwnProperty(this.fields[f])) {\n          link[f] = document[this.fields[f]];\n        }\n      }\n      return link;\n    }\n    \n    /**\n     * Fetch native database documents.\n     * \n     * @param {string|linkSelector} selector\n     * @param {SelectOptions} [options]\n     * @return {Object[]} documents - result documents\n     */\n    _fetch(selector, options) {\n      var query = this.query(selector);\n      var documents = lodash.filter(this.collection, query); \n      var _options = this.options(options);\n      if (_options.sort) documents = lodash.orderBy(documents, _options.sort.keys, _options.orders);\n      var skip = _options.skip?_options.skip:0;\n      var limit = _options.limit?skip+_options.limit:_options.limit;\n      documents = documents.slice(skip, limit);\n      return documents;\n    }\n    \n    /**\n     * Find and all matching links as an Array.\n     * \n     * @param {string|LinkSelector} selector\n     * @param {SelectOptions} [options]\n     * @param {Graph~fetchCallback} [callback]\n     * @return {Link[]} links - result links objects in array\n     */\n    fetch(selector, options, callback) {\n      var documents = this._fetch(selector, options);\n      var links = [];\n      for (var d in documents) {\n        links.push(this._generateLink(documents[d]));\n      }\n      if (callback) callback(undefined, links);\n      return links;\n    }\n    \n    /**\n     * Optional callback. If present, called with an error object as the first argument and, if no error, the result links objects in array.\n     *\n     * @callback Graph~fetchCallback\n     * @param {Error} [error]\n     * @param {Link[]} [links]\n     */\n    \n    /**\n     * Should call callback once for each matching document, sequentially and synchronously.\n     * \n     * @param {string|LinkSelector} selector\n     * @param {SelectOptions} [options]\n     * @param {Graph~eachCallback} [callback]\n     */\n    each(selector, options, callback) {\n      var links = this.fetch(selector, options);\n      for (var l in links) {\n        callback(links[l]);\n      }\n    }\n    \n    /**\n     * @callback Graph~eachCallback\n     * @param {Link} [link]\n     */\n    \n    /**\n     * Should map callback over all matching documents. Returns an Array.\n     * \n     * @param {string|LinkSelector} selector\n     * @param {SelectOptions} [options]\n     * @param {Graph~mapCallback} [callback]\n     * @return {Array} results\n     */\n    map(selector, options, callback) {\n      var links = this.fetch(selector, options);\n      return links.map(callback);\n    }\n    \n    /**\n     * @callback Graph~mapCallback\n     * @param {Link} [link]\n     * @return {*} result\n     */\n    \n    /**\n     * Should subscribe to the events: link, unlink, insert, update, remove.\n     * \n     * @param {string} event - name\n     * @param {Graph~onCallback} callback\n     */\n    on(event, callback) {\n      if (event == 'insert') {\n        this.emitter.addListener('insert', (document) => {\n          callback(undefined, this._generateLink(document));\n        });\n      }\n      if (event == 'update') {\n        this.emitter.addListener('update', (newDocument, oldDocument) => {\n          callback(this._generateLink(oldDocument), this._generateLink(newDocument));\n        });\n      }\n      if (event == 'remove') {\n        this.emitter.addListener('remove', (document) => {\n          callback(this._generateLink(document), undefined);\n        });\n      }\n      if (event == 'link') {\n        this.emitter.addListener('insert', (document) => {\n          callback(undefined, this._generateLink(document));\n        });\n        this.emitter.addListener('update', (newDocument, oldDocument) => {\n          callback(this._generateLink(oldDocument), this._generateLink(newDocument));\n        });\n      }\n      if (event == 'unlink') {\n        this.emitter.addListener('update', (newDocument, oldDocument) => {\n          callback(this._generateLink(oldDocument), this._generateLink(newDocument));\n        });\n        this.emitter.addListener('remove', (document) => {\n          callback(this._generateLink(document), undefined);\n        });\n      }\n    }\n    \n    /**\n     * @callback Graph~onCallback\n     * @param {Link} [oldLink] - can be undefined on link and insert events\n     * @param {Link} [newLink] - can be undefined on unlink and remove events\n     * @param {Object} [context] - additional app information, such as context.userId\n     */\n  }\n  \n  return ObjectGraph;\n};\n\nvar ObjectGraph = factoryObjectGraph(AncientGraph);\n\nexport { factoryObjectGraph, ObjectGraph as Graph };"]}