{"version":3,"sources":["../../src/lib/adapters/lokijs.js"],"names":["Graph","collection","fields","link","callback","_modifier","f","document","insert","id","$loki","undefined","error","selector","modifier","results","_fetch","m","r","update","length","documents","l","remove","type","parseInt","doc","hasOwnProperty","options","_options","sort","s","push","skip","limit","query","chain","where","compoundsort","offset","data","get","links","d","_generateLink","fetch","map","event","on","newDocument","oldDocument"],"mappings":"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","file":"lokijs.js","sourcesContent":["import { Graph as AncientGraph } from '../graph.js';\n\n/**\n * Class to inherit. Class with methods for control links in graph.\n * Adapted for LokiJS.\n * \n * @class\n */\nexport class Graph extends AncientGraph {\n  \n  /**\n   * Construct new graph and checks for required adaptation methods.\n   * @param {LokiJS.Collection} collection\n   * @param {Object} fields - matching of fields in the link with fields in document\n   * @param {*} object.source\n   * @param {*} object.target\n   * @throws {Error} if the adapter methods is not complete\n   */\n  constructor(collection, fields) {\n    super();\n    this.collection = collection;\n    this.fields = fields;\n  }\n  \n  /**\n   * Should insert new link into graph.\n   * Return a synchronous result. This can be useful in your application. But for writing generic code, it is recommended to only use the callback result.\n   * \n   * @param {Link} link\n   * @param {Graph~insertCallback} [callback]\n   * @return {string} [id]\n   */\n  insert(link, callback) {\n    var _modifier = {};\n    for (var f in link) {\n      if (this.fields[f]) {\n        _modifier[this.fields[f]] = link[f];\n      }\n    }\n    try {\n      var document = this.collection.insert(_modifier);\n      var id = \"\"+document.$loki;\n      if (callback) {\n        callback(undefined, id)\n      }\n      return id;\n    } catch(error) {\n      callback(error);\n    }\n  }\n  \n  /**\n   * Optional callback. If present, called with an error object as the first argument and, if no error, the unique id of inserted link as the second.\n   *\n   * @callback Graph~insertCallback\n   * @param {Error} [error]\n   * @param {string} [id]\n   */\n  \n  /**\n   * Should update to new state of modifier object link by unique id or by link query object.\n   * If the database allows, it is recommended to return a synchronous result. This can be useful in your application. But for writing generic code, it is recommended to only use the callback result.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {LinkModifier} modifier\n   * @param {Graph~updateCallback} [callback]\n   * @return {number} [count]\n   */\n  update(selector, modifier, callback) {\n    var results = this._fetch(selector);\n    var _modifier = {};\n    for (var m in modifier) {\n      if (this.fields[m]) {\n        _modifier[this.fields[m]] = modifier[m];\n      }\n    }\n    for (var r in results) {\n      for (var m in _modifier) {\n        if (typeof(_modifier[m]) == 'undefined') {\n          if (results[r][m]) {\n            delete results[r][m];\n          }\n        } else {\n          results[r][m] = _modifier[m];\n        }\n      }\n      this.collection.update(results[r]);\n    }\n    if (callback) callback(undefined, results.length);\n    return results.length;\n  }\n  \n  /**\n   * Optional callback. If present, called with an error object as the first argument and, if no error, the number of affected documents as the second.\n   *\n   * @callback Graph~updateCallback\n   * @param {Error} [error]\n   * @param {number} [count]\n   */\n  \n  /**\n   * Should remove link by unique id or by link query object.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {Graph~removeCallback} [callback]\n   */\n  remove(selector, callback) {\n    var documents = this._fetch(selector);\n    for (var l in documents) {\n      this.collection.remove(documents[l]);\n    }\n    callback(undefined, documents.length);\n  }\n  \n  /**\n   * Optional callback. If present, called with an error object as the first argument.\n   *\n   * @callback Graph~removeCallback\n   * @param {Error} [error]\n   * @param {number} [count]\n   */\n  \n  /**\n   * Generate adapter for database query for links search by unique id or by link query object.\n   * \n   * @param {string|LinkSelector} selector\n   * @return {*} query\n   */\n  query(selector) {\n    var type = typeof(selector);\n    if (type == 'string' || type == 'number') {\n      return parseInt(selector);\n    } else if (type == 'object') {\n      return (doc) => {\n        for (var m in selector) {\n          if (this.fields[m]) {\n            if (typeof(selector[m]) == 'undefined') {\n              if (doc.hasOwnProperty(this.fields[m])) return false;\n            } else {\n              if (doc[this.fields[m]] != selector[m]) return false;\n            }\n          }\n        }\n        return true;\n      }\n    }\n  }\n  \n  /**\n   * Generate adapted for database options object.\n   * \n   * @param {Object} [options]\n   * @return {*} options - a options suitable for the database\n   */\n  options(options) {\n    var _options = {};\n    if (options) {\n      if (options.sort) {\n        _options.sort = [];\n        for (var s in options.sort) {\n          if (this.fields[s]) {\n            _options.sort.push([this.fields[s], options.sort[s]]);\n          }\n        }\n      }\n      if (typeof(options.skip) == 'number') {\n        _options.skip = options.skip;\n      }\n      if (typeof(options.limit) == 'number') {\n        _options.limit = options.limit;\n      }\n    }\n    return _options;\n  }\n  \n  /**\n   * Generate Link from document by fields.\n   * \n   * @param {Object} document\n   * @return {Link} link\n   */\n  _generateLink(document) {\n    var link = {};\n    for (var f in this.fields) {\n      if (document[this.fields[f]]) {\n        link[f] = document[this.fields[f]];\n      }\n    }\n    return link;\n  }\n  \n  /**\n   * Fetch native database documents.\n   * \n   * @param {string|linkSelector} selector\n   * @param {SelectOptions} [options]\n   * @return {Object[]} documents - result documents\n   */\n  _fetch(selector, options) {\n    var query = this.query(selector);\n    if (typeof(query) == 'function') {\n      var chain = this.collection.chain().where(query);\n      var _options = this.options(options);\n      if (_options.sort) chain = chain.compoundsort(_options.sort);\n      if (_options.skip) chain = chain.offset(_options.skip);\n      if (_options.limit) chain = chain.limit(_options.limit);\n      return chain.data();\n    } else {\n      return [this.collection.get(query)];\n    }\n  }\n  \n  /**\n   * Find and all matching links as an Array.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {SelectOptions} [options]\n   * @param {Graph~fetchCallback} [callback]\n   * @return {Link[]} links - result links objects in array\n   */\n  fetch(selector, options, callback) {\n    var documents = this._fetch(selector, options);\n    var links = [];\n    for (var d in documents) {\n      links.push(this._generateLink(documents[d]));\n    }\n    if (callback) callback(undefined, links);\n    return links;\n  }\n  \n  /**\n   * Optional callback. If present, called with an error object as the first argument and, if no error, the result links objects in array.\n   *\n   * @callback Graph~fetchCallback\n   * @param {Error} [error]\n   * @param {Link[]} [links]\n   */\n  \n  /**\n   * Should call callback once for each matching document, sequentially and synchronously.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {SelectOptions} [options]\n   * @param {Graph~eachCallback} [callback]\n   */\n  each(selector, options, callback) {\n    var links = this.fetch(selector, options);\n    for (var l in links) {\n      callback(links[l]);\n    }\n  }\n  \n  /**\n   * @callback Graph~eachCallback\n   * @param {Link} [link]\n   */\n  \n  /**\n   * Should map callback over all matching documents. Returns an Array.\n   * \n   * @param {string|LinkSelector} selector\n   * @param {SelectOptions} [options]\n   * @param {Graph~mapCallback} [callback]\n   * @return {Array} results\n   */\n  map(selector, options, callback) {\n    var links = this.fetch(selector, options);\n    return links.map(callback);\n  }\n  \n  /**\n   * @callback Graph~mapCallback\n   * @param {Link} [link]\n   * @return {*} result\n   */\n  \n  /**\n   * Should subscribe to the events: link, unlink, insert, update, remove.\n   * \n   * @param {string} event - name\n   * @param {Graph-onCallback} callback\n   */\n  on(event, callback) {\n    if (event == 'insert') {\n      this.collection.on('insert', (document) => {\n        callback(undefined, this._generateLink(document));\n      });\n    }\n    if (event == 'update') {\n      this.collection.on('update', (newDocument, oldDocument) => {\n        callback(this._generateLink(oldDocument), this._generateLink(newDocument));\n      });\n    }\n    if (event == 'remove') {\n      this.collection.on('remove', (document) => {\n        callback(this._generateLink(document), undefined);\n      });\n    }\n    if (event == 'link') {\n      this.collection.on('insert', (document) => {\n        callback(undefined, this._generateLink(document));\n      });\n      this.collection.on('update', (newDocument, oldDocument) => {\n        callback(this._generateLink(oldDocument), this._generateLink(newDocument));\n      });\n    }\n    if (event == 'unlink') {\n      this.collection.on('update', (newDocument, oldDocument) => {\n        callback(this._generateLink(oldDocument), this._generateLink(newDocument));\n      });\n      this.collection.on('remove', (document) => {\n        callback(this._generateLink(document), undefined);\n      });\n    }\n  }\n  \n  /**\n   * @callback Graph~onCallback\n   * @param {Link} [oldLink] - can be undefined on link and insert events\n   * @param {Link} [newLink] - can be undefined on unlink and remove events\n   * @param {Object} [context] - additional app information, such as context.userId\n   */\n};"]}