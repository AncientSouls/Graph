{"version":3,"sources":["../src/tests/subscription.js"],"names":["SubscriptionTest","generateGraph","ids","describe","it","done","graph","emitted","on","oldLink","newLink","insert","source","target","error","id1","ifError","equal","update","count","remove"],"mappings":"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","file":"subscription.js","sourcesContent":["import { assert } from 'chai';\r\n\r\nexport function SubscriptionTest (generateGraph, ids) {\r\n  describe('Subscription tests', function() {\r\n    it('should insert and check handler', (done) => {\r\n      var graph = generateGraph();\r\n      var emitted = '';\r\n      graph.on('link', (oldLink, newLink) => emitted+='link');\r\n      graph.on('unlink', (oldLink, newLink) => emitted+='unlink');\r\n      graph.on('insert', (oldLink, newLink) => emitted+='insert');\r\n      graph.on('update', (oldLink, newLink) => emitted+='update');\r\n      graph.on('remove', (oldLink, newLink) => emitted+='remove');\r\n      graph.insert({ source: ids[0], target: ids[0] }, (error, id1) => {\r\n        assert.ifError(error);\r\n        assert.equal(emitted, 'linkinsert');\r\n        done();\r\n      });\r\n    });\r\n    it('should update and check handler', (done) => {\r\n      var graph = generateGraph();\r\n      var emitted = '';\r\n      graph.on('link', (oldLink, newLink) => emitted+='link');\r\n      graph.on('unlink', (oldLink, newLink) => emitted+='unlink');\r\n      graph.on('insert', (oldLink, newLink) => emitted+='insert');\r\n      graph.on('update', (oldLink, newLink) => emitted+='update');\r\n      graph.on('remove', (oldLink, newLink) => emitted+='remove');\r\n      graph.insert({ source: ids[1], target: ids[1] }, function(error, id1) {\r\n        assert.ifError(error);\r\n        graph.update(id1, { target: ids[2] }, function(error, count) {\r\n          assert.ifError(error);\r\n          assert.equal(emitted, 'linkinsertlinkunlinkupdate');\r\n          done();\r\n        });\r\n      });\r\n    });\r\n    it('should remove and check handler', (done) => {\r\n      var graph = generateGraph();\r\n      var emitted = '';\r\n      graph.on('link', (oldLink, newLink) => emitted+='link');\r\n      graph.on('unlink', (oldLink, newLink) => emitted+='unlink');\r\n      graph.on('insert', (oldLink, newLink) => emitted+='insert');\r\n      graph.on('update', (oldLink, newLink) => emitted+='update');\r\n      graph.on('remove', (oldLink, newLink) => emitted+='remove');\r\n      graph.insert({ source: ids[3], target: ids[3] }, function(error, id1) {\r\n        assert.ifError(error);\r\n        graph.remove(id1, function(error, count) {\r\n          assert.ifError(error);\r\n          assert.equal(emitted, 'linkinsertunlinkremove');\r\n          done();\r\n        });\r\n      });\r\n    });\r\n  });\r\n}"]}