{"version":3,"sources":["../src/tests/subscription.js"],"names":["SubscriptionTest","graph","ids","linked","unlinked","inserted","updated","removed","it","on","oldLink","newLink","insertedOld","linkedOld","insert","source","target","error","id1","ifError","equal","done","updatedOld","unlinkedOld","update","count"],"mappings":"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","file":"subscription.js","sourcesContent":["import { assert } from 'chai';\n\nexport function SubscriptionTest (graph, ids) {\n  var\n    linked = 0,\n    unlinked = 0,\n    inserted = 0,\n    updated = 0,\n    removed = 0\n  ;\n  it('should subscribe to link, unlink, inder, update, remove events', () => {\n    graph.on('link', (oldLink, newLink) => {\n      linked++;\n    });\n    graph.on('unlink', (oldLink, newLink) => {\n      unlinked++;\n    });\n    graph.on('insert', (oldLink, newLink) => {\n      inserted++;\n    });\n    graph.on('update', (oldLink, newLink) => {\n      updated++;\n    });\n    graph.on('remove', (oldLink, newLink) => {\n      removed++;\n    });\n  });\n  it('should insert and check handler', () => {\n    var\n      insertedOld = inserted,\n      linkedOld = linked\n    ;\n    graph.insert({ source: ids[0], target: ids[0] }, (error, id1) => {\n      assert.ifError(error);\n      assert.equal(linked, linkedOld + 1);\n      assert.equal(inserted, insertedOld + 1);\n    });\n  });\n  it('should update and check handler', (done) => {\n    var\n      updatedOld,\n      unlinkedOld,\n      linkedOld\n    ;\n    graph.insert({ source: ids[1], target: ids[1] }, function(error, id1) {\n      assert.ifError(error);\n      updatedOld = updated,\n      unlinkedOld = unlinked,\n      linkedOld = linked;\n      graph.update(id1, { target: ids[2] }, function(error, count) {\n        assert.equal(linked, linkedOld + 1);\n        assert.equal(unlinked, unlinkedOld + 1);\n        assert.equal(updated, updatedOld + 1);\n        done();\n      });\n    });\n  });\n  it('should insert and check handler', (done) => {\n    var\n      insertedOld = inserted,\n      linkedOld = linked\n    ;\n    graph.insert({ source: ids[0], target: ids[0] }, (error, id1) => {\n      assert.equal(linked, linkedOld + 1);\n      assert.equal(inserted, insertedOld + 1);\n      done();\n    });\n  });\n  it('should insert and check handler', (done) => {\n    var\n      insertedOld = inserted,\n      linkedOld = linked\n    ;\n    graph.insert({ source: ids[0], target: ids[0] }, (error, id1) => {\n      assert.equal(linked, linkedOld + 1);\n      assert.equal(inserted, insertedOld + 1);\n      done();\n    });\n  });\n  it('should insert and check handler', (done) => {\n    var\n      insertedOld = inserted,\n      linkedOld = linked\n    ;\n    graph.insert({ source: ids[0], target: ids[0] }, (error, id1) => {\n      assert.equal(linked, linkedOld + 1);\n      assert.equal(inserted, insertedOld + 1);\n      done();\n    });\n  });\n}"]}