{"version":3,"sources":["../src/tests/subscription.js"],"names":["SubscriptionTest","generateGraph","ids","describe","it","done","graph","emitted","on","oldLink","newLink","insert","source","target","error","id1","ifError","equal","update","count","remove"],"mappings":";;;;;QAEgBA,gB,GAAAA,gB;;AAFhB;;AAEO,SAASA,gBAAT,CAA2BC,aAA3B,EAA0CC,GAA1C,EAA+C;AACpDC,WAAS,oBAAT,EAA+B,YAAW;AACxCC,OAAG,iCAAH,EAAsC,UAACC,IAAD,EAAU;AAC9C,UAAIC,QAAQL,eAAZ;AACA,UAAIM,UAAU,EAAd;AACAD,YAAME,EAAN,CAAS,MAAT,EAAiB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,MAA/B;AAAA,OAAjB;AACAD,YAAME,EAAN,CAAS,QAAT,EAAmB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,QAA/B;AAAA,OAAnB;AACAD,YAAME,EAAN,CAAS,QAAT,EAAmB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,QAA/B;AAAA,OAAnB;AACAD,YAAME,EAAN,CAAS,QAAT,EAAmB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,QAA/B;AAAA,OAAnB;AACAD,YAAME,EAAN,CAAS,QAAT,EAAmB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,QAA/B;AAAA,OAAnB;AACAD,YAAMK,MAAN,CAAa,EAAEC,QAAQV,IAAI,CAAJ,CAAV,EAAkBW,QAAQX,IAAI,CAAJ,CAA1B,EAAb,EAAiD,UAACY,KAAD,EAAQC,GAAR,EAAgB;AAC/D,qBAAOC,OAAP,CAAeF,KAAf;AACA,qBAAOG,KAAP,CAAaV,OAAb,EAAsB,YAAtB;AACAF;AACD,OAJD;AAKD,KAbD;AAcAD,OAAG,iCAAH,EAAsC,UAACC,IAAD,EAAU;AAC9C,UAAIC,QAAQL,eAAZ;AACA,UAAIM,UAAU,EAAd;AACAD,YAAME,EAAN,CAAS,MAAT,EAAiB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,MAA/B;AAAA,OAAjB;AACAD,YAAME,EAAN,CAAS,QAAT,EAAmB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,QAA/B;AAAA,OAAnB;AACAD,YAAME,EAAN,CAAS,QAAT,EAAmB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,QAA/B;AAAA,OAAnB;AACAD,YAAME,EAAN,CAAS,QAAT,EAAmB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,QAA/B;AAAA,OAAnB;AACAD,YAAME,EAAN,CAAS,QAAT,EAAmB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,QAA/B;AAAA,OAAnB;AACAD,YAAMK,MAAN,CAAa,EAAEC,QAAQV,IAAI,CAAJ,CAAV,EAAkBW,QAAQX,IAAI,CAAJ,CAA1B,EAAb,EAAiD,UAASY,KAAT,EAAgBC,GAAhB,EAAqB;AACpE,qBAAOC,OAAP,CAAeF,KAAf;AACAR,cAAMY,MAAN,CAAaH,GAAb,EAAkB,EAAEF,QAAQX,IAAI,CAAJ,CAAV,EAAlB,EAAsC,UAASY,KAAT,EAAgBK,KAAhB,EAAuB;AAC3D,uBAAOH,OAAP,CAAeF,KAAf;AACA,uBAAOG,KAAP,CAAaV,OAAb,EAAsB,4BAAtB;AACAF;AACD,SAJD;AAKD,OAPD;AAQD,KAhBD;AAiBAD,OAAG,iCAAH,EAAsC,UAACC,IAAD,EAAU;AAC9C,UAAIC,QAAQL,eAAZ;AACA,UAAIM,UAAU,EAAd;AACAD,YAAME,EAAN,CAAS,MAAT,EAAiB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,MAA/B;AAAA,OAAjB;AACAD,YAAME,EAAN,CAAS,QAAT,EAAmB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,QAA/B;AAAA,OAAnB;AACAD,YAAME,EAAN,CAAS,QAAT,EAAmB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,QAA/B;AAAA,OAAnB;AACAD,YAAME,EAAN,CAAS,QAAT,EAAmB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,QAA/B;AAAA,OAAnB;AACAD,YAAME,EAAN,CAAS,QAAT,EAAmB,UAACC,OAAD,EAAUC,OAAV;AAAA,eAAsBH,WAAS,QAA/B;AAAA,OAAnB;AACAD,YAAMK,MAAN,CAAa,EAAEC,QAAQV,IAAI,CAAJ,CAAV,EAAkBW,QAAQX,IAAI,CAAJ,CAA1B,EAAb,EAAiD,UAASY,KAAT,EAAgBC,GAAhB,EAAqB;AACpE,qBAAOC,OAAP,CAAeF,KAAf;AACAR,cAAMc,MAAN,CAAaL,GAAb,EAAkB,UAASD,KAAT,EAAgBK,KAAhB,EAAuB;AACvC,uBAAOH,OAAP,CAAeF,KAAf;AACA,uBAAOG,KAAP,CAAaV,OAAb,EAAsB,wBAAtB;AACAF;AACD,SAJD;AAKD,OAPD;AAQD,KAhBD;AAiBD,GAjDD;AAkDD","file":"subscription.js","sourcesContent":["import { assert } from 'chai';\n\nexport function SubscriptionTest (generateGraph, ids) {\n  describe('Subscription tests', function() {\n    it('should insert and check handler', (done) => {\n      var graph = generateGraph();\n      var emitted = '';\n      graph.on('link', (oldLink, newLink) => emitted+='link');\n      graph.on('unlink', (oldLink, newLink) => emitted+='unlink');\n      graph.on('insert', (oldLink, newLink) => emitted+='insert');\n      graph.on('update', (oldLink, newLink) => emitted+='update');\n      graph.on('remove', (oldLink, newLink) => emitted+='remove');\n      graph.insert({ source: ids[0], target: ids[0] }, (error, id1) => {\n        assert.ifError(error);\n        assert.equal(emitted, 'linkinsert');\n        done();\n      });\n    });\n    it('should update and check handler', (done) => {\n      var graph = generateGraph();\n      var emitted = '';\n      graph.on('link', (oldLink, newLink) => emitted+='link');\n      graph.on('unlink', (oldLink, newLink) => emitted+='unlink');\n      graph.on('insert', (oldLink, newLink) => emitted+='insert');\n      graph.on('update', (oldLink, newLink) => emitted+='update');\n      graph.on('remove', (oldLink, newLink) => emitted+='remove');\n      graph.insert({ source: ids[1], target: ids[1] }, function(error, id1) {\n        assert.ifError(error);\n        graph.update(id1, { target: ids[2] }, function(error, count) {\n          assert.ifError(error);\n          assert.equal(emitted, 'linkinsertlinkunlinkupdate');\n          done();\n        });\n      });\n    });\n    it('should remove and check handler', (done) => {\n      var graph = generateGraph();\n      var emitted = '';\n      graph.on('link', (oldLink, newLink) => emitted+='link');\n      graph.on('unlink', (oldLink, newLink) => emitted+='unlink');\n      graph.on('insert', (oldLink, newLink) => emitted+='insert');\n      graph.on('update', (oldLink, newLink) => emitted+='update');\n      graph.on('remove', (oldLink, newLink) => emitted+='remove');\n      graph.insert({ source: ids[3], target: ids[3] }, function(error, id1) {\n        assert.ifError(error);\n        graph.remove(id1, function(error, count) {\n          assert.ifError(error);\n          assert.equal(emitted, 'linkinsertunlinkremove');\n          done();\n        });\n      });\n    });\n  });\n}"]}